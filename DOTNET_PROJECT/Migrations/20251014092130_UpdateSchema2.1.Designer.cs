// <auto-generated />
using System;
using DOTNET_PROJECT.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DOTNET_PROJECT.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251014092130_UpdateSchema2.1")]
    partial class UpdateSchema21
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("DOTNET_PROJECT.Domain.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasDiscriminator().HasValue("Character");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DOTNET_PROJECT.Domain.Models.Choice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NextStoryNodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoryNodeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NextStoryNodeId");

                    b.HasIndex("StoryNodeId");

                    b.ToTable("Choices");
                });

            modelBuilder.Entity("DOTNET_PROJECT.Domain.Models.Dialogue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoryNodeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("StoryNodeId");

                    b.ToTable("Dialogues");
                });

            modelBuilder.Entity("DOTNET_PROJECT.Domain.Models.StoryNode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BackgroundUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StoryNodes");
                });

            modelBuilder.Entity("DOTNET_PROJECT.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DOTNET_PROJECT.Domain.Models.PlayerCharacter", b =>
                {
                    b.HasBaseType("DOTNET_PROJECT.Domain.Models.Character");

                    b.Property<int>("CurrentStoryNodeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("TEXT");

                    b.Property<int>("Health")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("CurrentStoryNodeId");

                    b.HasIndex("UserId");

                    b.HasDiscriminator().HasValue("PlayerCharacter");
                });

            modelBuilder.Entity("DOTNET_PROJECT.Domain.Models.Choice", b =>
                {
                    b.HasOne("DOTNET_PROJECT.Domain.Models.StoryNode", "NextStoryNode")
                        .WithMany()
                        .HasForeignKey("NextStoryNodeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DOTNET_PROJECT.Domain.Models.StoryNode", "StoryNode")
                        .WithMany("Choices")
                        .HasForeignKey("StoryNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NextStoryNode");

                    b.Navigation("StoryNode");
                });

            modelBuilder.Entity("DOTNET_PROJECT.Domain.Models.Dialogue", b =>
                {
                    b.HasOne("DOTNET_PROJECT.Domain.Models.Character", "Character")
                        .WithMany("Dialogues")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("DOTNET_PROJECT.Domain.Models.StoryNode", "StoryNode")
                        .WithMany("Dialogues")
                        .HasForeignKey("StoryNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("StoryNode");
                });

            modelBuilder.Entity("DOTNET_PROJECT.Domain.Models.PlayerCharacter", b =>
                {
                    b.HasOne("DOTNET_PROJECT.Domain.Models.StoryNode", "CurrentStoryNode")
                        .WithMany()
                        .HasForeignKey("CurrentStoryNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTNET_PROJECT.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStoryNode");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DOTNET_PROJECT.Domain.Models.Character", b =>
                {
                    b.Navigation("Dialogues");
                });

            modelBuilder.Entity("DOTNET_PROJECT.Domain.Models.StoryNode", b =>
                {
                    b.Navigation("Choices");

                    b.Navigation("Dialogues");
                });
#pragma warning restore 612, 618
        }
    }
}
